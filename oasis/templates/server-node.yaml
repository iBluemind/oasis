heat_template_version: 2013-05-23
description: A load-balancer server
parameters:
  image:
    type: string
    description: Image used for servers
  key_name:
    type: string
    description: SSH key to connect to the servers
  flavor:
    type: string
    description: flavor used by the servers
  pool_id:
    type: string
    description: Pool to contact
  user_data:
    type: string
    description: Server user_data
  metadata:
    type: json
  network:
    type: string
    description: Network used by the server
  subnet:
    type: string
    description: Subnet used by the server
  app_port:
    type: string
    description: Application port

resources:
  sec_group:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
      - direction: egress
        ethertype: IPv4
        remote_ip_prefix: 0.0.0.0/0
      - direction: ingress
        protocol: icmp
      - direction: egress
        protocol: icmp
      - direction: ingress
        ethertype: IPv4
        port_range_max: 65535
        port_range_min: 1
        protocol: tcp
      - direction: egress
        ethertype: IPv4
        port_range_max: 65535
        port_range_min: 1
        protocol: tcp
      - direction: ingress
        ethertype: IPv4
        port_range_max: 65535
        port_range_min: 1
        protocol: udp
      - direction: egress
        ethertype: IPv4
        port_range_max: 65535
        port_range_min: 1
        protocol: udp
  sec_group2:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
      - remote_ip_prefix: 0.0.0.0/0
        protocol: tcp
        port_range_min: 1
        port_range_max: 65535
  server:
    type: OS::Nova::Server
    properties:
      flavor: {get_param: flavor}
      image: {get_param: image}
      key_name: {get_param: key_name}
      metadata: {get_param: metadata}
      user_data: {get_param: user_data}
      user_data_format: RAW
      networks: [{network: {get_param: network} }]
      security_groups: [{ get_resource: sec_group }]
  member:
    type: OS::Neutron::LBaaS::PoolMember
    properties:
      pool: {get_param: pool_id}
      address: { get_attr: [server, first_address]}
      protocol_port: { get_param: app_port }
      subnet: { get_param: subnet }

outputs:
  server_ip:
    description: IP Address of the load-balanced server.
    value: { get_attr: [server, first_address] }
  lb_member:
    description: LB member details.
    value: { get_attr: [member, show] }